[{"/home/abhijeet/Desktop/AdityaProject/coid-project/src/index.js":"1","/home/abhijeet/Desktop/AdityaProject/coid-project/src/App.js":"2","/home/abhijeet/Desktop/AdityaProject/coid-project/src/reportWebVitals.js":"3","/home/abhijeet/Desktop/AdityaProject/coid-project/src/components/Header/index.js":"4","/home/abhijeet/Desktop/AdityaProject/coid-project/src/components/Body/index.js":"5","/home/abhijeet/Desktop/AdityaProject/coid-project/src/components/HospitalGrid/index.js":"6","/home/abhijeet/Desktop/AdityaProject/coid-project/src/components/PatientGrid/index.js":"7","/home/abhijeet/Desktop/AdityaProject/coid-project/src/components/HospitalEditDialog/index.js":"8","/home/abhijeet/Desktop/AdityaProject/coid-project/src/components/InputTextField/InputTextField.js":"9","/home/abhijeet/Desktop/AdityaProject/coid-project/src/components/CustomToast/CustomToast.js":"10"},{"size":500,"mtime":1607934322377,"results":"11","hashOfConfig":"12"},{"size":398,"mtime":1608023902696,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607626277344,"results":"14","hashOfConfig":"12"},{"size":266,"mtime":1608026875257,"results":"15","hashOfConfig":"12"},{"size":6405,"mtime":1608027300334,"results":"16","hashOfConfig":"12"},{"size":6547,"mtime":1608025089546,"results":"17","hashOfConfig":"12"},{"size":153,"mtime":1608012922905,"results":"18","hashOfConfig":"12"},{"size":1900,"mtime":1608024063622,"results":"19","hashOfConfig":"12"},{"size":1378,"mtime":1608020092568,"results":"20","hashOfConfig":"12"},{"size":1588,"mtime":1608023550017,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"10svzsk",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/abhijeet/Desktop/AdityaProject/coid-project/src/index.js",[],["46","47"],"/home/abhijeet/Desktop/AdityaProject/coid-project/src/App.js",["48"],"/home/abhijeet/Desktop/AdityaProject/coid-project/src/reportWebVitals.js",[],"/home/abhijeet/Desktop/AdityaProject/coid-project/src/components/Header/index.js",[],"/home/abhijeet/Desktop/AdityaProject/coid-project/src/components/Body/index.js",["49","50","51","52","53","54","55"],"/home/abhijeet/Desktop/AdityaProject/coid-project/src/components/HospitalGrid/index.js",["56","57"],"import React, { Component } from 'react';\nimport MUIDataTable from 'mui-datatables';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport './HospitalGrid.scss';\nimport TimeAgo from 'react-timeago';\nconst eventCellTemplate = (prop) => {\n    return (<div className=\"\">{prop.value}</div>);\n}\nconst HospitalGrid = (props) => {\n        const getTimeAgoCellTemplate = (value, row) => {\n           \n            return (\n                <TimeAgo date={value} />\n                // <span className={`report-cell`}>{value}</span>\n            )\n        }\t \n        const getReportCellTemplate = (value, row) => {\n            return (\n                <span id={`reportCell_${value}`} className={`report-cell`}>{value}</span>\n            )\n        }\n        let columns = [\n            {\n                name: 'name', label: 'NAME', options: {\n                    customBodyRender: (value, tableMeta) => {\n                        return getReportCellTemplate(value, tableMeta.rowData);\n                    }\n                }\n            },\n            {\n                name: 'covidCapacity', label: 'COVID CAPACITY', options: {\n                    setCellProps: (row, i) => {\n                        return { className: row > 0 ? 'center-value-3 greater-value' : 'center-value-3' };\n                    },\n                }\n            },\n            {\n                name: 'nonCovidCapacity', label: 'NON-COVID CAPACITY', options: {\n                    setCellProps: (row, i) => {\n                        return { className: `center-value-2` };\n                    },\n                }\n            },\n            {\n                name: 'covidTotalCases', label: 'COVID TOTAL CASES', options: {\n                    setCellProps: (row, i) => {\n                        return { className: `center-value-2` };\n                    },\n                }\n            },\n            {\n                name: 'nonCovidTotalCases', label: 'NON-COVID TOTAL CASES', options: {\n                    setCellProps: (row, i) => {\n                        return { className: `center-value-2` };\n                    },\n                }\n            },\n            {\n                name: 'activeCovidPatients', label: 'ACTIVE COVID PATIENTS', options: {\n                    setCellProps: (row, i) => {\n                        return { className: row > 0 ? 'center-value-3 greater-value' : 'center-value-3' };\n                    },\n                }\n            },\n            {\n                name: 'activeNonCovidPatients', label: 'ACTIVE NON-COVID PATIENTS', options: {\n                    setCellProps: (row, i) => {\n                        return { className: `center-value-2` };\n                    },\n                }\n            },\n            {\n                name: 'addedDate', label: 'ADDED DATE', options: {\n                    sortDirection: 'desc',\n                    customBodyRender: (value, tableMeta) => {\n                        return getTimeAgoCellTemplate(value, tableMeta.rowData);\n                    },\n                    setCellProps: (row, i) => {\n                        return { className: row > 0 ? 'center-value-2 greater-value' : 'center-value-2' };\n                    },\n                }\n            },\n            { name: 'uid', label: '', options: { display: false } },\n        ];\n        // if (props.isManual) {\n        //     columns.splice(4,1);\n        // }\n        const getMuiTheme = () => createMuiTheme({\n            palette: { type: 'dark' },\n            overrides: {\n                MuiPaper: {\n                    root: {\n                        width: '100%',\n                        //height:'400px'\n                    },\n                }, MuiTableCell: {\n                    root: {\n                        height: '25px',\n                        paddingTop: '5px',\n                        paddingBottom: '5px'\n    \n                    }, \n                    // MUIDataTable: {\n                    //     responsiveScroll: {\n                    //         maxHeight: 'none'\n                    //     },\n                    //     maxHeight: '2000px'\n                    // },\n                    head : {\n                        color: 'rgb(153, 153, 153)',\n                        fontSize: '14px',\n                        fontWeight: 600,\n                        textTransform: 'uppercase'\n                    }\n                },\n                MUIDataTableToolbarSelect: {\n                    root: {\n                        display: 'none'\n                    }\n                },\n                MuiTableSortLabel: {\n                    root: {\n                        marginTop: '6px'\n                    }\n                },\n                MuiSvgIcon: {\n                    root: {\n                        fill: '#32d74b'\n                    }\n                },\n                MUIDataTable: {\n                    responsiveScroll: {\n                    maxHeight: '1000px !important'\n                    }\n                },\n    \n            }\n        });\n        const options = {\n            download: false,\n            print: false,\n            filter: false,\n            viewColumns: false,\n            search: false,\n            fixedHeader: true,\n            responsive: 'scroll',\n            pagination: false, // todo: enable pagination\n            rowsPerPage: props.rowsPerPage,\n            // serverSide: true,\n            // count: props.rowsPerPage,\n            page: props.page,\n            selectableRows: 'multiple',\n            rowsSelected: props.rowsSelected,\n            onChangePage: (currentPage) => changePage(currentPage), \n            onRowsSelect: (a,b,c) => props.onRowsSelect(a,b,c),\n            onRowClick: (a,b) => props.onDoubleClick(b.dataIndex, props.data[b.dataIndex]),\n            textLabels: {\n                body: {\n                    noMatch: props.isLoading ?\n                        'Loading...' :\n                        'Sorry, there is no matching data to display',\n                },\n            },\n        };\n        const changePage = (currentPage) => {\n            props.refreshData(currentPage);\n        }\n        return (\n            <div className=\"HospitalGridContainer\">\n                <MuiThemeProvider theme={getMuiTheme()}>\n                    <MUIDataTable\n                        data={props.data}\n                        columns={columns}\n                        options={options}\n                    />\n                </MuiThemeProvider>\n            </div>\n    \n        );\n    }\n\nexport default HospitalGrid;","/home/abhijeet/Desktop/AdityaProject/coid-project/src/components/PatientGrid/index.js",[],"/home/abhijeet/Desktop/AdityaProject/coid-project/src/components/HospitalEditDialog/index.js",["58","59"],"import React, {useEffect, useState} from 'react';\nimport './HospitalEditDialog.scss';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport InputTextField from '../../components/InputTextField/InputTextField';\nconst HospitalEditDialog = (props) => {\n    return (\n        <Modal\n        show={props.show}\n        onHide={props.handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n        dialogClassName=\"HospitalDialog\"\n        >\n        <Modal.Body>\n            <div className='app-form-controls-container'>\n                <div className='title'>\n                    {props.editHospital.name}\n                </div>\n                <div className='margin'>\n                <InputTextField \n            label=\"Name\" \n            defaultValue={props.editHospital.name} \n            onChange={(ev) => props.onChangeInput({...props.editHospital, name: ev.target.value})} />\n                </div>\n                <div className='margin'>\n                <InputTextField \n            label=\"Covid Capacity\" \n            defaultValue={props.editHospital.covidCapacity} \n            onChange={(ev) => props.onChangeInput({...props.editHospital, covidCapacity: ev.target.value})} />\n                </div>\n            <div className='margin'>\n            <InputTextField \n            label=\"Non Covid Capacity\" \n            defaultValue={props.editHospital.nonCovidCapacity} \n            onChange={(ev) => props.onChangeInput({...props.editHospital, nonCovidCapacity: ev.target.value})} />\n            </div>\n            \n            </div>\n        </Modal.Body>\n        <Modal.Footer>\n        <Button variant=\"secondary\" onClick={props.handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={props.update}>Update</Button>\n        </Modal.Footer>\n        </Modal>\n        )\n}\n\nexport default HospitalEditDialog;\n\n","/home/abhijeet/Desktop/AdityaProject/coid-project/src/components/InputTextField/InputTextField.js",["60","61"],"import React, { useState, useRef } from 'react';\nimport { FormControl, InputGroup } from 'react-bootstrap';\nimport inputValidIcon from '../../images/done.svg';\nimport './InputTextField.scss';\n\nconst InputValidationCheckbox = ({ validationFunction, value, valid_bool_id }) => {\n        return (\n            <InputGroup.Append>\n                <InputGroup.Text><img src={inputValidIcon} style={{ 'padding': '4px 4px 21px 2px' }} /></InputGroup.Text>\n            </InputGroup.Append>\n        )\n\n}\n\n\nexport default function InputTextField(props) {\n\n    const { validationFunction, label, defaultValue } = props;\n    let myInp = useRef(null);\n    \n    const handleChange = (ev) => {\n        if (props.onChange) {\n            props.onChange(ev);\n        }\n    }\n\n    return (\n        \n        <InputGroup className={`InputTextField  ${props.className}`} onChange={handleChange} >\n            <InputGroup.Prepend>\n                <InputGroup.Text onClick={() => {myInp.focus()}}>{label}</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl ref={(ip) => myInp = ip} id=\"basic-url\" aria-label=\"With textarea\" defaultValue={defaultValue} />\n            <InputValidationCheckbox validationFunction={validationFunction} value={defaultValue} valid_bool_id=\"secret_input\" />\n        </InputGroup>\n    )\n}\n\nInputTextField.defaultProps = {\n    label: '',\n    value: ''\n}","/home/abhijeet/Desktop/AdityaProject/coid-project/src/components/CustomToast/CustomToast.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":12},{"ruleId":"66","severity":1,"message":"70","line":8,"column":8,"nodeType":"68","messageId":"69","endLine":8,"endColumn":14},{"ruleId":"66","severity":1,"message":"71","line":10,"column":7,"nodeType":"68","messageId":"69","endLine":10,"endColumn":12},{"ruleId":"66","severity":1,"message":"72","line":36,"column":12,"nodeType":"68","messageId":"69","endLine":36,"endColumn":24},{"ruleId":"66","severity":1,"message":"73","line":38,"column":12,"nodeType":"68","messageId":"69","endLine":38,"endColumn":24},{"ruleId":"66","severity":1,"message":"74","line":38,"column":26,"nodeType":"68","messageId":"69","endLine":38,"endColumn":41},{"ruleId":"66","severity":1,"message":"75","line":64,"column":13,"nodeType":"68","messageId":"69","endLine":64,"endColumn":20},{"ruleId":"66","severity":1,"message":"76","line":112,"column":11,"nodeType":"68","messageId":"69","endLine":112,"endColumn":22},{"ruleId":"66","severity":1,"message":"77","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"78","line":6,"column":7,"nodeType":"68","messageId":"69","endLine":6,"endColumn":24},{"ruleId":"66","severity":1,"message":"79","line":1,"column":16,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"80","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":35},{"ruleId":"66","severity":1,"message":"80","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"82","line":9,"column":34,"nodeType":"83","endLine":9,"endColumn":104},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'dummy' is assigned a value but never used.","'selectedRows' is assigned a value but never used.","'hospitalData' is assigned a value but never used.","'setHospitalData' is assigned a value but never used.","'reports' is assigned a value but never used.","'addHospital' is assigned a value but never used.","'Component' is defined but never used.","'eventCellTemplate' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]